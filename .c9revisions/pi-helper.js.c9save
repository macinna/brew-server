{"ts":1413233419111,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var wpi = require('wiring-pi');\nvar exec = require('child_process').exec;\n\n//set up pi pins for export and output\n//by exporting the pins, we can use witout being root\nvar child = exec('gpio export 17 out',\n  function (error, stdout, stderr) {\n    console.log('stdout: ' + stdout);\n    console.log('stderr: ' + stderr);\n    if (error !== null) {\n      console.log('exec error: ' + error);\n    }\n});\n\n\nwpi.wiringPiSetupSys();\n\nconst ON = 0;\nconst OFF = 1;\n\nconst HLT_BURNER_PIN = 17;\nconst MT_BURNER_PIN = 17;\nconst LEFT_PUMP_PIN = 17;\nconst RIGHT_PUMP_PIN = 17;\n\n\nvar currentStates = {\n    hltBurner: 'off',\n    mtBurner: 'off',\n    leftPump: 'off',\n    rightPump: 'off',\n    regulateHlt: 'off',\n    regulateMt: 'off'\n}\n\n\nmodule.exports = {\n    setBurnerState: function (burner, state) {\n      \n        var newPinState = state == 'on' ? ON : OFF;\n        var pin;\n        \n        if(burner === 'hlt') {\n            pin = HLT_BURNER_PIN;\n            currentStates.hltBurner = state;\n        }\n\n        if (burner === 'mt') {\n            pin = MT_BURNER_PIN;\n            currentStates.mtBurner = state;\n        }\n\n        wpi.digitalWrite(pin, newPinState);\n\n    },\n    getBurnerState: function(burner) {\n        if(burner === 'hlt')\n            return currentStates.hltBurner;\n        \n        if(burner === 'mt')\n            return currentStates.mtBurner;\n      \n    },\n    setPumpState: function (pump, state) {\n        var newPinState = state == 'on' ? ON : OFF;\n        var pin;\n        \n        if(pump === 'left') {\n            pin = LEFT_PUMP_PIN;\n            currentStates.leftPump = state;\n        }\n\n        if (pump === 'right') {\n            pin = RIGHT_PUMP_PIN;\n            currentStates.rightPump = state;\n        }\n\n        wpi.digitalWrite(pin, newPinState);\n    \n    \n    \n    },\n    getPumpState: function(pump) {\n        if(pump === 'left')\n            return currentStates.leftPump;\n        \n        if(pump === 'right')\n            return currentStates.rightPump;\n    \n    \n      \n    },\n    getRegulateTemperatureState: function(vessel) {\n        if(vessel === 'hlt')\n            return currentStates.regulateHlt;\n        \n        if(vessel === 'mt')\n            return currentStates.regulateMt;\n\n    },\n    regulateTemperature: function(vessel) {\n    \n    \n    },\n    getAllStates: function() {\n        return currentStates;\n    }\n};\n\nfunction getPinStatus(pin) {\n    \n}\n\nfunction setPinStatus(pin, status) {\n    \n}"]],"start1":0,"start2":0,"length1":0,"length2":2439}]],"length":2439}
{"contributors":[],"silentsave":false,"ts":1413233549330,"patch":[[{"diffs":[[0," function(vessel"],[1,", state"],[0,") {\n    \n    \n  "]],"start1":2251,"start2":2251,"length1":32,"length2":39}]],"length":2446,"saved":false}
{"ts":1413234155237,"patch":[[{"diffs":[[0,"l, state) {\n"],[1,"\n        if(vessel === 'hlt')\n            currentStates.regulateHlt = state;\n        \n        if(vessel === 'mt')\n            currentStates.regulateMt = state;\n            \n\n"],[0,"    \n    \n  "]],"start1":2266,"start2":2266,"length1":24,"length2":198}]],"length":2620,"saved":false}
{"ts":1413234157974,"patch":[[{"diffs":[[0,"te;\n"],[-1,"            \n\n    "],[0,"\n   "]],"start1":2434,"start2":2434,"length1":26,"length2":8}]],"length":2602,"saved":false}
